name: Build PrusaSlicer-SE

on:
  push:
    branches:
      - build

env:
  PROJECT_NAME: "PrusaSlicer-SE"

jobs:
  ##########
  # Global #
  ##########
  global:
    name: Define global variables
    runs-on: ubuntu-latest
    outputs:
      date: ${{ steps.date.outputs.date }}

    steps:
      - name: Getting current date
        id: date
        run: echo "date=$(date +'%Y%m%d%H%M')" >> $GITHUB_OUTPUT

  ########################
  # MacOS (x86_64/arm64) #
  ########################
  macos-build:
    name: Building MacOS binaries
    runs-on: macos-12

    strategy:
      matrix:
        arch: [x86_64, arm64]

    steps:
      - uses: actions/checkout@v3
        name: Checking out

      - name: Hashing dependency CMake files
        id: dep_cmake_hash
        run: echo "dep_cmake_hash=${{ hashFiles('./deps/**') }}" >> $GITHUB_OUTPUT

      - name: Install build depencies
        run: |
          brew install cmake git gettext automake
          sudo ln -s $(brew --prefix)/bin/automake $(brew --prefix)/bin/automake-1.15
          sudo ln -s $(brew --prefix)/bin/aclocal $(brew --prefix)/bin/aclocal-1.15

      - name: Preparing build directories
        run: |
          mkdir ./deps/build
          mkdir ./build
          mkdir ./build/pack
          mkdir ./build/pack/$PROJECT_NAME
          mkdir ./build/pack/$PROJECT_NAME/$PROJECT_NAME.app
          mkdir ./build/pack/$PROJECT_NAME/$PROJECT_NAME.app/Contents
          mkdir ./build/pack/$PROJECT_NAME/$PROJECT_NAME.app/Contents/_CodeSignature
          mkdir ./build/pack/$PROJECT_NAME/$PROJECT_NAME.app/Contents/Frameworks
          mkdir ./build/pack/$PROJECT_NAME/$PROJECT_NAME.app/Contents/MacOS

      - uses: actions/cache@v3
        name: Getting dependency cache
        id: cache
        with:
          path: ./deps/build
          key: ${{ runner.os }}-${{ matrix.arch }}-build-deps-${{ steps.dep_cmake_hash.outputs.dep_cmake_hash }}

      - name: Configuring dependencies
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        working-directory: ./deps/build
        run: cmake .. -DCMAKE_OSX_DEPLOYMENT_TARGET="10.14" -DCMAKE_OSX_ARCHITECTURES="${{ matrix.arch }}"
      - name: Building dependencies
        if: ${{ success() && steps.cache.outputs.cache-hit != 'true' }}
        working-directory: ./deps/build
        run: |
          export LIBRARY_PATH=$LIBRARY_PATH:$(brew --prefix zstd)/lib/
          make -j2
      
      - name: Configuring PrusaSlicer
        if: ${{ success() }}
        working-directory: ./build
        run: cmake .. -DCMAKE_PREFIX_PATH="$PWD/../deps/build/destdir/usr/local" -DCMAKE_OSX_DEPLOYMENT_TARGET="10.14" -DSLIC3R_STATIC=1 -DCMAKE_OSX_ARCHITECTURES="${{ matrix.arch }}"
      - name: Building PrusaSlicer
        if: ${{ success() }}
        working-directory: ./build
        run: |
          export LIBRARY_PATH=$LIBRARY_PATH:$(brew --prefix zstd)/lib/
          make -j2

      - name: Packing executable
        if: ${{ success() }} 
        working-directory: ./build
        run: |
          cp -Rf ../resources pack/$PROJECT_NAME/$PROJECT_NAME.app/Contents/Resources
          cp pack/$PROJECT_NAME/$PROJECT_NAME.app/Contents/Resources/icons/PrusaSlicer.icns pack/$PROJECT_NAME/$PROJECT_NAME.app/Contents/resources/PrusaSlicer.icns
          cp src/Info.plist pack/$PROJECT_NAME/$PROJECT_NAME.app/Contents/Info.plist
          echo -n -e 'APPL????\x0a' > pack/$PROJECT_NAME/$PROJECT_NAME.app/Contents/PkgInfo
          find pack/$PROJECT_NAME/$PROJECT_NAME.app/Contents/Resources/localization -name "*.po" -type f -delete
          cp -f src/PrusaSlicer pack/$PROJECT_NAME/$PROJECT_NAME.app/Contents/MacOS/$PROJECT_NAME

      - name: Upload APP artifact
        if: ${{ success() }} 
        uses: actions/upload-artifact@v3
        with:
          name: MacOS_PrusaSlicer-SE-${{ matrix.arch }}
          path: ./build/pack/PrusaSlicer-SE/

  macos-dmg:
    name: Building MacOS unversial DMG
    runs-on: macos-12
    needs: [global, macos-build]

    steps:
      - name: Downloading x86_64 artifact
        uses: actions/download-artifact@v3
        with:
          name: MacOS_PrusaSlicer-SE-x86_64
          path: PrusaSlicer-SE-x86_64
      - name: Downloading arm64 artifact
        if: ${{ success() }} 
        uses: actions/download-artifact@v3
        with:
          name: MacOS_PrusaSlicer-SE-arm64
          path: PrusaSlicer-SE-arm64

      - name: Create copy of x86_64 package
        if: ${{ success() }} 
        run: cp -rf PrusaSlicer-SE-x86_64 $PROJECT_NAME

      - name: Build universal binary
        if: ${{ success() }}
        run: |
          lipo -create -output $PROJECT_NAME/$PROJECT_NAME.app/Contents/MacOS/$PROJECT_NAME PrusaSlicer-SE-arm64/$PROJECT_NAME.app/Contents/MacOS/$PROJECT_NAME PrusaSlicer-SE-x86_64/$PROJECT_NAME.app/Contents/MacOS/$PROJECT_NAME
          chmod u+x $PROJECT_NAME/$PROJECT_NAME.app/Contents/MacOS/$PROJECT_NAME

      - name: Creating DMG file
        if: ${{ success() }}
        run: |
          hdiutil create -ov -fs HFS+ -volname "$PROJECT_NAME" -srcfolder "$PROJECT_NAME" temp.dmg
          hdiutil convert temp.dmg -format UDZO -o build.dmg

      - name: Uploading artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@v3
        with:
          name: PrusaSlicer-${{ github.ref_name }}+MacOS-universal-${{ needs.global.outputs.date }}.dmg
          path: build.dmg
          if-no-files-found: error

      - uses: geekyeggo/delete-artifact@v2
        if: ${{ success() }}
        name: Cleanup artifacts
        with:
          name: |
            MacOS_PrusaSlicer-SE-x86_64
            MacOS_PrusaSlicer-SE-arm64

  ###########
  # Windows #
  ###########
  windows:
    name: Building Windows binary
    runs-on: windows-2022
    needs: [global]

    strategy:
      matrix:
        arch: [x64]

    steps:
      - uses: actions/checkout@v3
        name: Checking out
      - uses: ilammy/msvc-dev-cmd@v1
        name: Configuring build environment
        with:
          toolset: 16.0
          arch: ${{ matrix.arch }}
          vsversion: "2019"
      - name: Hashing dependency CMake files
        id: dep_cmake_hash
        run: echo "dep_cmake_hash=${{ hashFiles('./deps/**') }}" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append
      - name: Creating build directories
        run: |
          mkdir deps/build
          mkdir build

      - uses: actions/cache@v3
        name: Getting dependency cache
        id: cache
        with:
          path: ./deps/build
          key: ${{ runner.os }}-${{ matrix.arch }}-build-deps-${{ steps.dep_cmake_hash.outputs.dep_cmake_hash }}
      - name: Configuring dependencies
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        working-directory: ./deps/build
        run: cmake .. -G "Visual Studio 16 2019" -DDESTDIR="${{ github.workspace }}\deps\build"
      - name: Building dependencies
        if: ${{ success() && steps.cache.outputs.cache-hit != 'true' }}
        working-directory: ./deps/build
        run: msbuild /m ALL_BUILD.vcxproj /p:Configuration=Release

      - name: Configuring PrusaSlicer
        if: ${{ success() }}
        working-directory: ./build
        run: cmake .. -G "Visual Studio 16 2019" -DCMAKE_PREFIX_PATH="${{ github.workspace }}\deps\build\usr\loca"
      - name: Building PrusaSlicer
        if: ${{ success() }}
        working-directory: ./build
        run: msbuild /m ALL_BUILD.vcxproj /p:Configuration=Release